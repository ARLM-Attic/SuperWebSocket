//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Web.CommunicationControllerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThermoTemps", Namespace="http://schemas.datacontract.org/2004/07/SharedClasses")]
    [System.SerializableAttribute()]
    public partial class ThermoTemps : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoolingVentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FridgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IceMakerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoolingVent {
            get {
                return this.CoolingVentField;
            }
            set {
                if ((this.CoolingVentField.Equals(value) != true)) {
                    this.CoolingVentField = value;
                    this.RaisePropertyChanged("CoolingVent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fan {
            get {
                return this.FanField;
            }
            set {
                if ((this.FanField.Equals(value) != true)) {
                    this.FanField = value;
                    this.RaisePropertyChanged("Fan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Freezer {
            get {
                return this.FreezerField;
            }
            set {
                if ((this.FreezerField.Equals(value) != true)) {
                    this.FreezerField = value;
                    this.RaisePropertyChanged("Freezer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fridge {
            get {
                return this.FridgeField;
            }
            set {
                if ((this.FridgeField.Equals(value) != true)) {
                    this.FridgeField = value;
                    this.RaisePropertyChanged("Fridge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IceMaker {
            get {
                return this.IceMakerField;
            }
            set {
                if ((this.IceMakerField.Equals(value) != true)) {
                    this.IceMakerField = value;
                    this.RaisePropertyChanged("IceMaker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommunicationControllerService.IWebSocketService")]
    public interface IWebSocketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebSocketService/ReverseCommunication", ReplyAction="http://tempuri.org/IWebSocketService/ReverseCommunicationResponse")]
        string ReverseCommunication(string communication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebSocketService/GetTemperatures", ReplyAction="http://tempuri.org/IWebSocketService/GetTemperaturesResponse")]
        Client.Web.CommunicationControllerService.ThermoTemps GetTemperatures(System.Nullable<int> fan);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebSocketServiceChannel : Client.Web.CommunicationControllerService.IWebSocketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebSocketServiceClient : System.ServiceModel.ClientBase<Client.Web.CommunicationControllerService.IWebSocketService>, Client.Web.CommunicationControllerService.IWebSocketService {
        
        public WebSocketServiceClient() {
        }
        
        public WebSocketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebSocketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebSocketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebSocketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ReverseCommunication(string communication) {
            return base.Channel.ReverseCommunication(communication);
        }
        
        public Client.Web.CommunicationControllerService.ThermoTemps GetTemperatures(System.Nullable<int> fan) {
            return base.Channel.GetTemperatures(fan);
        }
    }
}
