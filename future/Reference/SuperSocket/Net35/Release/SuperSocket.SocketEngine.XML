<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSocket.SocketEngine</name>
    </assembly>
    <members>
        <member name="T:SuperSocket.SocketEngine.SocketSession">
            <summary>
            Socket Session, all application session should base on this class
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.SocketSession.Start">
            <summary>
            Starts this session.
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.SocketSession.StartSession">
            <summary>
            Says the welcome information when a client connectted.
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.SocketSession.OnClose(SuperSocket.SocketBase.CloseReason)">
            <summary>
            Called when [close].
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.SocketSession.StartSend">
            <summary>
            Starts the sending.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.SessionID">
            <summary>
            Gets or sets the session ID.
            </summary>
            <value>The session ID.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.Config">
            <summary>
            Gets or sets the config.
            </summary>
            <value>
            The config.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.Closed">
            <summary>
            Occurs when [closed].
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.LocalEndPoint">
            <summary>
            Gets the local end point.
            </summary>
            <value>The local end point.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.RemoteEndPoint">
            <summary>
            Gets the remote end point.
            </summary>
            <value>The remote end point.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketSession.SecureProtocol">
            <summary>
            Gets or sets the secure protocol.
            </summary>
            <value>The secure protocol.</value>
        </member>
        <member name="M:SuperSocket.SocketEngine.AsyncStreamSocketSession.Start">
            <summary>
            Starts this session communication.
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.CertificateConfig">
            <summary>
            Certificate configuration
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.CertificateConfig.FilePath">
            <summary>
            Gets the certificate file path.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.CertificateConfig.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.CertificateConfig.StoreName">
            <summary>
            Gets the the store where certificate locates.
            </summary>
            <value>
            The name of the store.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.CertificateConfig.Thumbprint">
            <summary>
            Gets the thumbprint.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.CertificateConfig.IsEnabled">
            <summary>
            Gets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.ConnectionFilterConfig">
            <summary>
            ConnectionFilter configuration
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.ConnectionFilterConfig.Type">
            <summary>
            Gets the filter's type.
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.ConnectionFilterConfigCollection">
            <summary>
            ConnectionFilter configuartion collection
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Listener">
            <summary>
            Listener configuration
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Listener.Ip">
            <summary>
            Gets the ip of listener
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Listener.Port">
            <summary>
            Gets the port of listener
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Listener.Backlog">
            <summary>
            Gets the backlog.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Listener.Security">
            <summary>
            Gets the security option, None/Default/Tls/Ssl/...
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.ListenerConfigCollection">
            <summary>
            Listener configuration collection
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Server">
            <summary>
            Server configuration
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Server.GetChildConfig``1(System.String)">
            <summary>
            Gets the child config.
            </summary>
            <typeparam name="TConfig">The type of the config.</typeparam>
            <param name="childConfigName">Name of the child config.</param>
            <returns></returns>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Protocol">
            <summary>
            Gets the protocol.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Ip">
            <summary>
            Gets the ip.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Port">
            <summary>
            Gets the port.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Mode">
            <summary>
            Gets the mode.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Disabled">
            <summary>
            Gets a value indicating whether this <see cref="T:SuperSocket.SocketBase.Config.IServerConfig"/> is disabled.
            </summary>
            <value>
              <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.SendTimeOut">
            <summary>
            Gets the send time out.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.MaxConnectionNumber">
            <summary>
            Gets the max connection number.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ReceiveBufferSize">
            <summary>
            Gets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.SendBufferSize">
            <summary>
            Gets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.SyncSend">
            <summary>
            Gets a value indicating whether sending is in synchronous mode.
            </summary>
            <value>
              <c>true</c> if [sync send]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.LogCommand">
            <summary>
            Gets a value indicating whether log command in log file.
            </summary>
            <value><c>true</c> if log command; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ClearIdleSession">
            <summary>
            Gets a value indicating whether clear idle session.
            </summary>
            <value><c>true</c> if clear idle session; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ClearIdleSessionInterval">
            <summary>
            Gets the clear idle session interval, in seconds.
            </summary>
            <value>The clear idle session interval.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.IdleSessionTimeOut">
            <summary>
            Gets the idle session timeout time length, in seconds.
            </summary>
            <value>The idle session time out.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.CertificateConfig">
            <summary>
            Gets the certificate config.
            </summary>
            <value>The certificate config.</value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Certificate">
            <summary>
            Gets X509Certificate configuration.
            </summary>
            <value>
            X509Certificate configuration.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Security">
            <summary>
            Gets the security protocol, X509 certificate.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.MaxRequestLength">
            <summary>
            Gets the max allowed length of request.
            </summary>
            <value>
            The max allowed length of request.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.DisableSessionSnapshot">
            <summary>
            Gets a value indicating whether [disable session snapshot]
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.SessionSnapshotInterval">
            <summary>
            Gets the interval to taking snapshot for all live sessions.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ConnectionFilters">
            <summary>
            Gets the connection filters used by this server instance.
            </summary>
            <value>
            The connection filters's name list, seperated by comma
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.KeepAliveTime">
            <summary>
            Gets the start keep alive time, in seconds
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.KeepAliveInterval">
            <summary>
            Gets the keep alive interval, in seconds.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.EnableDynamicCommand">
            <summary>
            Gets a value indicating whether [enable dynamic command](support commands written in IronPython).
            </summary>
            <value>
            	<c>true</c> if [dynamic command is enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.ListenBacklog">
            <summary>
            Gets the backlog size of socket listening.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.StartupOrder">
            <summary>
            Gets the startup order of the server instance.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.Listeners">
            <summary>
            Gets the listeners' configuration.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Server.SuperSocket#SocketBase#Config#IServerConfig#Listeners">
            <summary>
            Gets the listeners' configuration.
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.ServerCollection">
            <summary>
            Server configuration collection
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Service">
            <summary>
            Service configuration
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Service.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Service.Disabled">
            <summary>
            Gets a value indicating whether this <see cref="T:SuperSocket.SocketBase.Config.IServiceConfig"/> is disabled.
            </summary>
            <value>
              <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.ServiceCollection">
            <summary>
            Service configuration collection
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.SocketServiceConfig">
            <summary>
            SuperSocket's root configuration node
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.Servers">
            <summary>
            Gets all the server configurations
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.Services">
            <summary>
            Gets the service configurations
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.ConnectionFilters">
            <summary>
            Gets all the connection filter configurations.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.MaxWorkingThreads">
            <summary>
            Gets the max working threads.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.MinWorkingThreads">
            <summary>
            Gets the min working threads.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.MaxCompletionPortThreads">
            <summary>
            Gets the max completion port threads.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.MinCompletionPortThreads">
            <summary>
            Gets the min completion port threads.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.PerformanceDataCollectInterval">
            <summary>
            Gets the performance data collect interval, in seconds.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.SocketServiceConfig.DisablePerformanceDataCollector">
            <summary>
            Gets a value indicating whether [disable performance data collector].
            </summary>
            <value>
            	<c>true</c> if [disable performance data collector]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:SuperSocket.SocketEngine.DefaultBootstrap">
            <summary>
            SuperSocket default bootstrap
            </summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.DefaultBootstrap.m_Initialized">
            <summary>
            Indicates whether the bootstrap is initialized
            </summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.DefaultBootstrap.m_ServiceDict">
            <summary>
            Service dictionary which have been loaded
            </summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.DefaultBootstrap.m_ConnectionFilterDict">
            <summary>
            Connection filter which have been loaded
            </summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.DefaultBootstrap.m_Config">
            <summary>
            Global configuration
            </summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.DefaultBootstrap.m_GlobalLog">
            <summary>
            Global log
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SuperSocket.SocketEngine.DefaultBootstrap"/> class.
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Initialize(SuperSocket.SocketBase.Config.IConfig,System.Func{SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Config.IServerConfig},SuperSocket.Common.Logging.ILogFactory)">
            <summary>
            Initializes the bootstrap with the configuration, config resolver and log factory.
            </summary>
            <param name="config">The config.</param>
            <param name="serverConfigResolver">The server config resolver.</param>
            <param name="logFactory">The log factory.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Initialize(SuperSocket.SocketBase.Config.IConfig,System.Func{SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Config.IServerConfig})">
            <summary>
            Initializes the bootstrap with the configuration and config resolver.
            </summary>
            <param name="config">The config.</param>
            <param name="serverConfigResolver">The server config resolver.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Initialize(SuperSocket.SocketBase.Config.IConfig)">
            <summary>
            Initializes the bootstrap with the configuration
            </summary>
            <param name="config">The config.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Initialize(SuperSocket.SocketBase.Config.IRootConfig,System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.IAppServer},System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.Config.IServerConfig})">
            <summary>
            Initializes the bootstrap with initialized appserver instances.
            </summary>
            <param name="rootConfig">The root config.</param>
            <param name="servers">The servers.</param>
            <param name="serverConfigs">The server configs.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Initialize(SuperSocket.SocketBase.Config.IRootConfig,System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.IAppServer},System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.Config.IServerConfig},SuperSocket.Common.Logging.ILogFactory)">
            <summary>
            Initializes the bootstrap with initialized appserver instances.
            </summary>
            <param name="rootConfig">The root config.</param>
            <param name="servers">The servers.</param>
            <param name="serverConfigs">The server configs.</param>
            <param name="logFactory">The log factory.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.InitializeServer(SuperSocket.SocketBase.Config.IServerConfig)">
            <summary>
            Initializes the server with the server's configuration.
            </summary>
            <param name="serverConfig">The server config.</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Start">
            <summary>
            Starts this bootstrap.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.DefaultBootstrap.Stop">
            <summary>
            Stops this bootstrap.
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.DefaultBootstrap.AppServers">
            <summary>
            Gets all the app servers running in this bootstrap
            </summary>
        </member>
        <member name="E:SuperSocket.SocketEngine.DefaultBootstrap.PerformanceDataCollected">
            <summary>
            Occurs when [performance data collected].
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.ISocketListener">
            <summary>
            The interface for socket listener
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.ISocketListener.Start">
            <summary>
            Starts to listen
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.SocketEngine.ISocketListener.Stop">
            <summary>
            Stops listening
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.ISocketListener.Info">
            <summary>
            Gets the info of listener
            </summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.ISocketListener.EndPoint">
            <summary>
            Gets the end point the listener is working on
            </summary>
        </member>
        <member name="E:SuperSocket.SocketEngine.ISocketListener.NewClientAccepted">
            <summary>
            Occurs when new client accepted.
            </summary>
        </member>
        <member name="E:SuperSocket.SocketEngine.ISocketListener.Error">
            <summary>
            Occurs when error got.
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.SocketServerFactory">
            <summary>
            Default socket server factory
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.SocketServerFactory.CreateSocketServer``1(SuperSocket.SocketBase.IAppServer,SuperSocket.SocketBase.ListenerInfo[],SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Protocol.IRequestFilterFactory{``0})">
            <summary>
            Creates the socket server.
            </summary>
            <typeparam name="TRequestInfo">The type of the request info.</typeparam>
            <param name="appServer">The app server.</param>
            <param name="listeners">The listeners.</param>
            <param name="config">The config.</param>
            <param name="requestFilterFactory">The request filter factory.</param>
            <returns></returns>
        </member>
        <member name="P:SuperSocket.SocketEngine.SocketServerFactory.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.TcpAsyncSocketListener">
            <summary>
            Tcp socket listener in async mode
            </summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.TcpAsyncSocketListener.Start">
            <summary>
            Starts to listen
            </summary>
            <returns></returns>
        </member>
        <member name="E:SuperSocket.SocketEngine.TcpAsyncSocketListener.NewClientAccepted">
            <summary>
            Occurs when new client accepted.
            </summary>
        </member>
        <member name="E:SuperSocket.SocketEngine.TcpAsyncSocketListener.Error">
            <summary>
            Occurs when error got.
            </summary>
        </member>
    </members>
</doc>
